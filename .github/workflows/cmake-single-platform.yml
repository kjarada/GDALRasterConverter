# This starter workflow is for a CMake project running on a single platform.
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_INSTALL_OPTIONS: --x-abi-tools-use-exact-versions
  VCPKG_BUILD_TYPE: release
  VCPKG_DISABLE_COMPILER_TRACKING: ON

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: List GitHub workspace
        run: ls -R ${{ github.workspace }}
        shell: bash

      - name: Set vcpkg root environment variable
        shell: cmd
        run: |
          echo "VCPKG_ROOT=C:\vcpkg" >> "%GITHUB_ENV%"
          echo "VCPKG_DEFAULT_TRIPLET=x64-windows" >> "%GITHUB_ENV%"
          echo "VCPKG_BUILD_TYPE=release" >> "%GITHUB_ENV%"

      - name: Run vcpkg
        id: runvcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: 'C:\vcpkg'
          vcpkgTriplet: 'x64-windows'
          vcpkgGitURL: 'https://github.com/microsoft/vcpkg.git'
          vcpkgJsonGlob: '**/vcpkg.json'
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: List GitHub workspace before build
        run: ls -R ${{ github.workspace }}
        shell: bash

      - name: Prints output of run-vcpkg's action
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}'"

      - name: Run CMake with vcpkg (Release configuration)
        uses: lukka/run-cmake@v10
        id: runcmake
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: 'windows-vs2022-vcpkg'
          buildPreset: 'windows-vs2022-vcpkg'
          buildPresetAdditionalArgs: '--config Release'

      - name: List GitHub workspace after build
        run: ls -R ${{ github.workspace }}
        shell: bash
